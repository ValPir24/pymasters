"""Add tags and photo_tags tables

Revision ID: a97e637ae5cd
Revises: 81dda7625c94
Create Date: 2024-07-27 00:12:27.761792

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a97e637ae5cd'
down_revision: Union[str, None] = '81dda7625c94'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_comments_photo_id', table_name='comments')
    op.drop_index('ix_comments_user_id', table_name='comments')
    op.alter_column('photos', 'description',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.drop_index('ix_photos_id', table_name='photos')
    op.drop_index('ix_tags_id', table_name='tags')
    op.add_column('users', sa.Column('role', sa.String(length=50), nullable=True))
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.drop_column('users', 'role')
    op.create_index('ix_tags_id', 'tags', ['id'], unique=False)
    op.create_index('ix_photos_id', 'photos', ['id'], unique=False)
    op.alter_column('photos', 'description',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=True)
    op.create_index('ix_comments_user_id', 'comments', ['user_id'], unique=False)
    op.create_index('ix_comments_photo_id', 'comments', ['photo_id'], unique=False)
    # ### end Alembic commands ###
